package edu.uoc.meteoPocket{	import air.net.URLMonitor;	import flash.events.StatusEvent;	import flash.net.URLLoader;		import edu.uoc.meteoPocket.ScreenEvent;	import edu.uoc.meteoPocket.ScreenTypes;		import flash.desktop.NativeApplication;	import flash.display.Loader;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.ProgressEvent;	import flash.net.URLRequest;	import flash.text.TextField;
		public class MenuScreen extends Screen	{		private const MARGIN:int = 20;				public var buttonList:Array;				//Elements a la timeline		public var iconMeteoPocket_sp:Sprite;		public var optionA_sp:Sprite;		public var optionB_sp:Sprite;		public var yahooIcon_sp:Sprite;				private var urlMonitor:URLMonitor;				public function MenuScreen()		{			super();		}				protected override function init(ev:Event):void		{			var i:int;			var nButtons:int;			var buttonTemp:Sprite;						buttonList = new Array();			buttonList.push(optionA_sp);			buttonList.push(optionB_sp);						super.init(ev);						nButtons = buttonList.length;						for (i=0; i<nButtons; i++)			{				buttonTemp = Sprite(buttonList[i]);				buttonTemp.buttonMode = true;				buttonTemp.mouseChildren = false;				buttonTemp.addEventListener(MouseEvent.CLICK, gotoScreen);			}						//Load Yahoo Weather logo if connection to Internet available			monitoringConnection();					}				public function monitoringConnection():void		{			urlMonitor = new URLMonitor(new URLRequest("http://www.google.com"));			urlMonitor.addEventListener(StatusEvent.STATUS, connectionStatus);						if(!urlMonitor.running)				urlMonitor.start();		}				private function connectionStatus(ev:StatusEvent) { 			if(urlMonitor.available){				// Internet available				trace("READING YAHOO LOGO");								// load Yahoo Image				//using loader for load an image				var loader:Loader = new Loader();								var urlImage:URLRequest = new URLRequest("http://l.yimg.com/a/i/brand/purplelogo//uh/us/news-wea.gif");								//add eventlisteners for receiving events of init, progress and complete				loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, progressHandler);				loader.contentLoaderInfo.addEventListener(Event.INIT, initHandler);				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, completeHandler);								//load image				loader.load(urlImage);			}			else{				// No Internet available							}		} 						private function initHandler(e:Event):void {			//INIT		}						private function progressHandler(e:ProgressEvent):void {			//PROGRESS		}						private function completeHandler(e:Event):void {			//COMPLETED			trace("IMAGE LOADING COMPLETED");						yahooIcon_sp.addChild(e.target.content);						//positionning			if(this.stage){				yahooIcon_sp.x = stage.stageWidth/2 - yahooIcon_sp.width/2;				yahooIcon_sp.y = 30;}						//add image to the display list			addChild(yahooIcon_sp);		}				private function gotoScreen(ev:MouseEvent):void 		{			var newScreen:int;			var buttonClicked:String = '';			var e:ScreenEvent;						if (ev != null) { buttonClicked = ev.target.name; }			switch(buttonClicked)			{				case 'optionA_sp': newScreen = ScreenTypes.SCREEN_A; break;				case 'optionB_sp': newScreen = ScreenTypes.SCREEN_B; break;			}						e = new ScreenEvent(ScreenEvent.CHANGE_SCREEN, false, false, newScreen);			dispatchEvent(e);		}				protected override function adaptLayout(ev:Event = null):void 		{			var i:int;			var buttonTemp:Sprite;			var nButtons:int;						yahooIcon_sp.x = stage.stageWidth/2 - yahooIcon_sp.width/2;			yahooIcon_sp.y = 30;						iconMeteoPocket_sp.x = stage.stageWidth/2 -iconMeteoPocket_sp.width/2;			iconMeteoPocket_sp.y = stage.stageHeight/2 -iconMeteoPocket_sp.height;						nButtons = buttonList.length;						for (i=0; i<nButtons; i++)			{				buttonTemp = Sprite(buttonList[i]);				buttonTemp.x = Math.floor( (stage.stageWidth - buttonTemp.width)/2 );				buttonTemp.y = stage.stageHeight/2 + MARGIN + (buttonTemp.height+MARGIN)*i			}					}	}}