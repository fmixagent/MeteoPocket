package edu.uoc.meteoPocket{	import com.greensock.TweenMax;		import edu.uoc.meteoPocket.Screen;	import edu.uoc.meteoPocket.ScreenEvent;	import edu.uoc.meteoPocket.ScreenTypes;		import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.filters.BlurFilter;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;
		public class ScreenA extends Screen	{		// Constants		private const MARGIN:int = 30;		private const DURATION_TRANSITION:Number = 0.5;				// Timeline instances		public var title_tf:TextField;		public var weatherConditionIcon_mc:MovieClip;		public var city_tf:TextField;		public var temperature_tf:TextField;		public var conditions_tf:TextField;		public var btWeek_sp:SimpleButton;		public var background_sp:Sprite;				// Private variables		private var _weatherData:Object;		private var scale:Number;				public function ScreenA(title:String,weatherData:Object)		{			super();						// Recover data			title_tf.text = title;			_weatherData = new Object();			_weatherData = weatherData;					}				protected override function init(ev:Event):void 		{				// Weather Picto			// (Each frame of weatherConditionIcon_mc represent a code icon)			trace("Weather code: " + _weatherData.todayCode);			if( _weatherData.todayCode <=47) {				weatherConditionIcon_mc.gotoAndStop(_weatherData.todayCode+1);			} else {				weatherConditionIcon_mc.gotoAndStop("notAvailable");			}						// Initialise information			city_tf.text = "a "+ _weatherData.city + " ( Lat:" + _weatherData.cityLat + " | Long:" + _weatherData.cityLong + " )";			temperature_tf.text = _weatherData.todayTemp + " ºC";				conditions_tf.text = _weatherData.todayCondition;						// Initialise textFields			city_tf.autoSize = TextFieldAutoSize.NONE;			temperature_tf.autoSize = TextFieldAutoSize.NONE;			conditions_tf.autoSize = TextFieldAutoSize.NONE;						// Word wrap			city_tf.wordWrap = true;			temperature_tf.wordWrap = true;			conditions_tf.wordWrap = true;						// Weekly weather button			btWeek_sp.addEventListener(MouseEvent.CLICK, gotoListScreen);						super.init(ev);					}				private function gotoListScreen(ev:MouseEvent):void 		{			var e:ScreenEvent = new ScreenEvent(ScreenEvent.CHANGE_SCREEN, false, false, ScreenTypes.SCREEN_B);			dispatchEvent(e);		}				public override function screenIn():void 		{						this.x = -this.width;			this.alpha = 0;			var tween:TweenMax = new TweenMax(this,DURATION_TRANSITION, {x:0,alpha:1});					}				public override function screenOut():void 		{			var tween:TweenMax = new TweenMax(this,DURATION_TRANSITION, {x:-this.width,alpha:0,onComplete:function(){Main(root).removeOut()}});		}				protected override function adaptLayout(ev:Event = null):void 		{			var top = Main(root).topBar_sp.height;			scale = Math.max(stage.stageWidth,stage.stageHeight)/800;						// Positionning of the elements that doesn't change from landscape or portrait mode						// Scale elements			btWeek_sp.scaleX = scale;			btWeek_sp.scaleY = scale;			title_tf.scaleX = scale;			title_tf.scaleY = scale;			city_tf.scaleX = scale;			city_tf.scaleY = scale;			weatherConditionIcon_mc.scaleX = scale;			weatherConditionIcon_mc.scaleY = scale;			temperature_tf.scaleX = scale;			temperature_tf.scaleY = scale;			conditions_tf.scaleX = scale;			conditions_tf.scaleY = scale;						// title_tf : screen title			title_tf.x = stage.stageWidth/2 - title_tf.width/2;			title_tf.y = top + MARGIN*scale;			//City			city_tf.x = stage.stageWidth/2 - city_tf.width/2;			city_tf.y = title_tf.y + title_tf.height- 10*scale;						// btToday						// btWeek_sp : button to weekly pronostic			btWeek_sp.x = Math.floor((stage.stageWidth - btWeek_sp.width)/2);			btWeek_sp.y = stage.stageHeight - btWeek_sp.height - MARGIN*scale;						// background			background_sp.width = stage.stageWidth;			background_sp.height = stage.stageHeight;						// two different layouts: portrait and landscape			if(stage.stageWidth > stage.stageHeight){								//Landscape mode				trace("LANDSCAPE");								//Weather icon				weatherConditionIcon_mc.x = stage.stageWidth/2 - weatherConditionIcon_mc.width -MARGIN*scale;				weatherConditionIcon_mc.y = stage.stageHeight/2 - weatherConditionIcon_mc.height/2; 								//Infos				temperature_tf.x = stage.stageWidth/2 + MARGIN*scale;				conditions_tf.x = stage.stageWidth/2 + MARGIN*scale;								//Separate elements between them				temperature_tf.y = weatherConditionIcon_mc.y + 80*scale;				conditions_tf.y = temperature_tf.y + temperature_tf.height - 20*scale;				}			else			{				//Portrait mode				trace("PORTRAIT");								//Weather icon				weatherConditionIcon_mc.x = stage.stageWidth/2 - weatherConditionIcon_mc.width/2;				weatherConditionIcon_mc.y = stage.stageHeight/2 - weatherConditionIcon_mc.height + 30*scale; 								//Infos				temperature_tf.x = stage.stageWidth/2 - temperature_tf.width/2;				conditions_tf.x = stage.stageWidth/2 - (conditions_tf.textWidth/2)*scale;												//Separate elements between them				temperature_tf.y = weatherConditionIcon_mc.y + weatherConditionIcon_mc.height - 20*scale;				conditions_tf.y = temperature_tf.y + temperature_tf.height - 20*scale;			}		}	}}